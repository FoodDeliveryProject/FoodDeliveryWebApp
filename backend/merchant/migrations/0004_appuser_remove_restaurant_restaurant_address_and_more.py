# Generated by Django 5.2 on 2025-04-13 05:27

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("merchant", "0003_remove_merchant_company_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid Nepali mobile or landline number",
                                regex="^(?:((98|97|96)\\d{8})|(0\\d{2,3}\\d{6}))$",
                            )
                        ],
                    ),
                ),
                ("address", models.TextField()),
            ],
        ),
        migrations.RemoveField(
            model_name="restaurant",
            name="restaurant_address",
        ),
        migrations.RemoveField(
            model_name="restaurant",
            name="restaurant_contact_name",
        ),
        migrations.RemoveField(
            model_name="restaurant",
            name="restaurant_name",
        ),
        migrations.AddField(
            model_name="restaurant",
            name="store_address",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="restaurant",
            name="store_contact_name",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="restaurant",
            name="store_name",
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name="restaurant",
            name="city",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name="restaurant",
            name="contact_number",
            field=models.CharField(
                max_length=15,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid Nepali mobile or landline number",
                        regex="^(?:((98|97|96)\\d{8})|(0\\d{2,3}\\d{6}))$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="restaurant",
            name="cuisine",
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name="restaurant",
            name="latitude",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="restaurant",
            name="longitude",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="restaurant",
            name="secondary_contact_number",
            field=models.CharField(
                blank=True,
                max_length=15,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid Nepali mobile or landline number",
                        regex="^(?:((98|97|96)\\d{8})|(0\\d{2,3}\\d{6}))$",
                    )
                ],
            ),
        ),
        migrations.CreateModel(
            name="FoodItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("price", models.FloatField()),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="food_items",
                        to="merchant.restaurant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_date", models.DateTimeField(default=datetime.datetime.now)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("OUT_FOR_DELIVERY", "Out for Delivery"),
                            ("DELIVERED", "Delivered"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "restaurant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="merchant.restaurant",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="merchant.appuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryPersonnel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "phone_number",
                    models.CharField(
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid Nepali mobile or landline number",
                                regex="^(?:((98|97|96)\\d{8})|(0\\d{2,3}\\d{6}))$",
                            )
                        ],
                    ),
                ),
                ("vehicle_type", models.CharField(max_length=50)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "current_order",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_personnel",
                        to="merchant.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Delivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("delivery_address", models.TextField()),
                ("assigned_time", models.DateTimeField(default=datetime.datetime.now)),
                ("delivery_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ASSIGNED", "Assigned"),
                            ("PICKED_UP", "Picked Up"),
                            ("IN_TRANSIT", "In Transit"),
                            ("DELIVERED", "Delivered"),
                            ("FAILED", "Failed"),
                        ],
                        default="ASSIGNED",
                        max_length=20,
                    ),
                ),
                (
                    "personnel",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deliveries",
                        to="merchant.deliverypersonnel",
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery",
                        to="merchant.order",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                (
                    "food_item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="merchant.fooditem",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="merchant.order",
                    ),
                ),
            ],
        ),
    ]
